epochs: 600  # total train epochs
per_batch_size: 128
img_size: 640
iou_thres: 0.7
conf_free: True
clip_grad: True
ms_loss_scaler: dynamic
ms_loss_scaler_value: 65536.0
overflow_still_update: False
ms_amp_level: O2
sync_bn: False
anchor_base: False
opencv_threads_num: 0  # opencv: disable threading optimizations

optimizer:
  optimizer: momentum
  lr_init: 0.01  # initial learning rate (SGD=1E-2, Adam=1E-3)
  momentum: 0.937  # SGD momentum/Adam beta1
  nesterov: True  # update gradients with NAG(Nesterov Accelerated Gradient) algorithm
  loss_scale: 1.0  # loss scale for optimizer
  warmup_epochs: 3  # warmup epochs (fractions ok)
  warmup_momentum: 0.8  # warmup initial momentum
  warmup_bias_lr: 0.0  # warmup initial bias lr
  min_warmup_step: 1000  # minimum warmup step
  group_param: yolov8  # group param strategy
  gp_weight_decay: 0.0005  # group param weight decay 5e-4
  start_factor: 1.0
  end_factor: 0.01

loss:
  name: YOLOv12Loss
  box: 7.5  # box loss gain
  cls: 0.5  # cls loss gain
  dfl: 1.5  # dfl loss gain
  reg_max: 16

network:
  model_name: yolov12
  nc: 80  # number of classes
  reg_max: 16

  stride: [8, 16, 32]

  # YOLO12-turbo backbone
  backbone:
    # [from, repeats, module, args]
    - [-1, 1, ConvNormAct,  [64, 3, 2]] # 0-P1/2
    - [-1, 1, ConvNormAct,  [128, 3, 2, 1, 2]] # 1-P2/4
    - [-1, 2, C3k2,  [256, False, 0.25]]
    - [-1, 1, ConvNormAct,  [256, 3, 2, 1, 4]] # 3-P3/8
    - [-1, 2, C3k2,  [512, False, 0.25]]
    - [-1, 1, ConvNormAct,  [512, 3, 2]] # 5-P4/16
    - [-1, 4, A2C2f, [512, True, 4]]
    - [-1, 1, ConvNormAct,  [1024, 3, 2]] # 7-P5/32
    - [-1, 4, A2C2f, [1024, True, 1]] # 8

  # YOLO12-turbo head
  head:
    - [-1, 1, Upsample, [None, 2, "nearest"]]
    - [[-1, 6], 1, Concat, [1]] # cat backbone P4
    - [-1, 2, A2C2f, [512, False, -1]] # 11

    - [-1, 1, Upsample, [None, 2, "nearest"]]
    - [[-1, 4], 1, Concat, [1]] # cat backbone P3
    - [-1, 2, A2C2f, [256, False, -1]] # 14

    - [-1, 1, ConvNormAct, [256, 3, 2]]
    - [[-1, 11], 1, Concat, [1]] # cat head P4
    - [-1, 2, A2C2f, [512, False, -1]] # 17

    - [-1, 1, ConvNormAct, [512, 3, 2]]
    - [[-1, 8], 1, Concat, [1]] # cat head P5
    - [-1, 2, C3k2, [1024, True]] # 20 (P5/32-large)

    - [[14, 17, 20], 1, YOLOv12Head, [nc, reg_max, stride]] # Detect(P3, P4, P5)